---

- name: set_facts for this vm
  set_fact:
    '{{ item.key }}': '{{ item.value }}'
  loop: "{{ lookup('dict', nfv_controller) }}"

- name: Check for VM presence
  virt:
    name: '{{ name }}'
    command: get_xml
  register: vm_presence
  ignore_errors: True

- block:
    - name: Get current state
      virt:
        name: '{{ name }}'
        command: status
      register: current_state

    - name: Stop VM is running
      virt:
        name: '{{ name }}'
        command: shutdown
      ignore_errors: True
      when: current_state['status'] == 'running'

    - name: Make sure VM is stopped
      virt:
        name: '{{ name }}'
        command: status
      register: task_result
      ignore_errors: yes
      retries: 60
      until: task_result['status'] == 'shutdown'
      delay: 3

    - name: Destroy VM if failed to stop
      virt:
        name: '{{ name }}'
        command: destroy
      when: task_result['failed']

    - name: Create Snapshot
      shell: 'qemu-img snapshot -c {{ backup_img }} {{ vol1 }}'
      args:
        chdir: '{{ libvirt_image_dir }}'

    - name: Create Snapshot Qcow2
      shell: 'qemu-img convert -f qcow2 -O qcow2 -s {{ backup_img }} {{ vol1 }} {{ backup_dir }}/{{ backup_img }}.qcow2'
      args:
        chdir: '{{ libvirt_image_dir }}'

    - name: Delete Snapshot
      shell: 'qemu-img snapshot -d {{ backup_img }} {{ vol1 }}'
      args:
        chdir: '{{ libvirt_image_dir }}'

    - name: Start the VM
      virt:
        name: '{{ name }}'
        command: start
      when: current_state['status'] == 'running'

  when: not vm_presence.failed
